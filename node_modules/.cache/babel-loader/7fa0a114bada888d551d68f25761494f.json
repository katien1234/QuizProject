{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\05\\\\02\\\\2019\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\05\\\\02\\\\2019\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\05\\\\02\\\\2019\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\05\\\\02\\\\2019\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\05\\\\02\\\\2019\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\05\\\\02\\\\2019\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\05\\\\02\\\\2019\\\\src\\\\components\\\\DisplayQuiz.js\";\nimport React, { Component } from 'react';\nimport './Component.css';\n\nvar DisplayQuiz =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DisplayQuiz, _Component);\n\n  function DisplayQuiz() {\n    var _this;\n\n    _classCallCheck(this, DisplayQuiz);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DisplayQuiz).call(this));\n    _this.state = {\n      question: undefined,\n      answer: undefined,\n      counter: \"\"\n    };\n    _this.clickTrue = _this.clickTrue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.clickFalse = _this.clickFalse.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DisplayQuiz, [{\n    key: \"clickTrue\",\n    value: function clickTrue() {\n      if (this.state.answer === \"True\" || this.state.answer === \"true\") {\n        console.log(\"Correct\");\n        this.setState({\n          counter: \"Correct\"\n        });\n      } else this.setState({\n        counter: \"Incorrect\"\n      });\n    }\n  }, {\n    key: \"clickFalse\",\n    value: function clickFalse() {\n      if (this.state.answer === \"False\" || this.state.answer === \"false\") {\n        console.log(\"Correct\");\n        this.setState({\n          counter: \"Correct\"\n        });\n      } else this.setState({\n        counter: \"Incorrect\"\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        question: this.props.item.question,\n        answer: this.props.item.answer\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"quiz\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.props.item.question), React.createElement(\"button\", {\n        name: \"True\",\n        onClick: this.clickTrue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"True\"), React.createElement(\"button\", {\n        id: \"True\",\n        name: \"False\",\n        onClick: this.clickFalse,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \" False \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.state.counter));\n    }\n  }]);\n\n  return DisplayQuiz;\n}(Component);\n\nexport default DisplayQuiz;","map":{"version":3,"sources":["C:\\Users\\Admin\\Desktop\\05\\02\\2019\\src\\components\\DisplayQuiz.js"],"names":["React","Component","DisplayQuiz","state","question","undefined","answer","counter","clickTrue","bind","clickFalse","console","log","setState","props","item"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP;;IAIMC,W;;;;;AACF,yBAAc;AAAA;;AAAA;;AACV;AADU,UAQdC,KARc,GAQR;AACFC,MAAAA,QAAQ,EAAEC,SADR;AAEFC,MAAAA,MAAM,EAAED,SAFN;AAGFE,MAAAA,OAAO,EAAE;AAHP,KARQ;AAGd,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,uDAAjB;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBD,IAAhB,uDAAlB;AAJc;AAMb;;;;gCASU;AACP,UAAI,KAAKN,KAAL,CAAWG,MAAX,KAAsB,MAAtB,IAAgC,KAAKH,KAAL,CAAWG,MAAX,KAAsB,MAA1D,EAAiE;AAC/DK,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,aAAKC,QAAL,CAAc;AACZN,UAAAA,OAAO,EAAE;AADG,SAAd;AAGD,OALD,MAMK,KAAKM,QAAL,CAAc;AACfN,QAAAA,OAAO,EAAE;AADM,OAAd;AAGN;;;iCAEW;AACV,UAAG,KAAKJ,KAAL,CAAWG,MAAX,KAAsB,OAAtB,IAAiC,KAAKH,KAAL,CAAWG,MAAX,KAAsB,OAA1D,EAAkE;AAChEK,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,aAAKC,QAAL,CAAc;AACZN,UAAAA,OAAO,EAAE;AADG,SAAd;AAGD,OALD,MAMK,KAAKM,QAAL,CAAc;AACfN,QAAAA,OAAO,EAAE;AADM,OAAd;AAGN;;;wCAEkB;AACf,WAAKM,QAAL,CAAc;AACVT,QAAAA,QAAQ,EAAE,KAAKU,KAAL,CAAWC,IAAX,CAAgBX,QADhB;AAEVE,QAAAA,MAAM,EAAE,KAAKQ,KAAL,CAAWC,IAAX,CAAgBT;AAFd,OAAd;AAIH;;;6BAIM;AACL,aACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKQ,KAAL,CAAWC,IAAX,CAAgBX,QADrB,CADJ,EAGI;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,OAAO,EAAE,KAAKI,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAII;AAAQ,QAAA,EAAE,EAAG,MAAb;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAgC,QAAA,OAAO,EAAE,KAAKE,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ,KAAKP,KAAL,CAAWI,OADP,CALJ,CADJ;AAWH;;;;EA7DqBN,S;;AAgE1B,eAAeC,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport './Component.css';\r\n\r\n\r\n\r\nclass DisplayQuiz extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n    this.clickTrue = this.clickTrue.bind(this);\r\n    this.clickFalse = this.clickFalse.bind(this);\r\n   \r\n    }\r\n\r\n    state={\r\n        question: undefined,\r\n        answer: undefined,\r\n        counter: \"\",\r\n        \r\n    }\r\n\r\n    clickTrue(){\r\n        if (this.state.answer === \"True\" || this.state.answer === \"true\"){\r\n          console.log(\"Correct\")\r\n          this.setState({\r\n            counter: \"Correct\"\r\n          })\r\n        }\r\n        else this.setState({\r\n            counter: \"Incorrect\"\r\n          })\r\n      }\r\n\r\n      clickFalse(){\r\n        if(this.state.answer === \"False\" || this.state.answer === \"false\"){\r\n          console.log(\"Correct\")\r\n          this.setState({\r\n            counter: \"Correct\"\r\n          })\r\n        }\r\n        else this.setState({\r\n            counter: \"Incorrect\"\r\n          })\r\n      }\r\n      \r\n      componentDidMount(){\r\n          this.setState({\r\n              question: this.props.item.question,\r\n              answer: this.props.item.answer\r\n          })\r\n      }\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"quiz\">\r\n                <p>\r\n                    {this.props.item.question}</p>\r\n                <button name=\"True\" onClick={this.clickTrue}>True</button> \r\n                <button id = \"True\"name=\"False\" onClick={this.clickFalse}> False </button> \r\n                <p>\r\n           {this.state.counter}\r\n          </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DisplayQuiz;"]},"metadata":{},"sourceType":"module"}