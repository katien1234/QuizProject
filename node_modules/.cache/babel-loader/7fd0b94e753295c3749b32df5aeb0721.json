{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\FinishedPorject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\FinishedPorject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\FinishedPorject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\FinishedPorject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\FinishedPorject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\FinishedPorject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\FinishedPorject\\\\src\\\\components\\\\Timer.js\";\nimport React, { Component } from 'react';\n\nvar Timer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Timer, _Component);\n\n  function Timer() {\n    var _this;\n\n    _classCallCheck(this, Timer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Timer).call(this));\n    _this.state = {\n      time: {},\n      seconds: 30\n    };\n    _this.timer = 0;\n    _this.startTimer = _this.startTimer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.countDown = _this.countDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Timer, [{\n    key: \"secondsToTime\",\n    value: function secondsToTime(secs) {\n      var divisor_for_minutes = secs % (60 * 60);\n      var minutes = Math.floor(divisor_for_minutes / 60);\n      var divisor_for_seconds = divisor_for_minutes % 60;\n      var seconds = Math.ceil(divisor_for_seconds);\n      var obj = {\n        \"m\": minutes,\n        \"s\": seconds\n      };\n      return obj;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var timeLeftVar = this.secondsToTime(this.state.seconds);\n      this.setState({\n        time: timeLeftVar\n      });\n    }\n  }, {\n    key: \"startTimer\",\n    value: function startTimer() {\n      if (this.timer === 0 && this.state.seconds > 0) {\n        this.timer = setInterval(this.countDown, 1000);\n      }\n    }\n  }, {\n    key: \"countDown\",\n    value: function countDown() {\n      var seconds = this.state.seconds - 1;\n      this.setState({\n        time: this.secondsToTime(seconds),\n        seconds: seconds\n      });\n\n      if (seconds === 0) {\n        clearInterval(this.timer);\n      }\n    } //m: {this.state.time.m} Put in render for minutes \n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.startTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Timer\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), this.state.time.s, \"  seconds\");\n    }\n  }]);\n\n  return Timer;\n}(Component);\n\nexport default Timer;","map":{"version":3,"sources":["C:\\Users\\Admin\\Desktop\\FinishedPorject\\src\\components\\Timer.js"],"names":["React","Component","Timer","state","time","seconds","timer","startTimer","bind","countDown","secs","divisor_for_minutes","minutes","Math","floor","divisor_for_seconds","ceil","obj","timeLeftVar","secondsToTime","setState","setInterval","clearInterval","s"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,K;;;;;AACJ,mBAAc;AAAA;;AAAA;;AACZ;AAEA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,OAAO,EAAE;AAArB,KAAb;AACA,UAAKC,KAAL,GAAa,CAAb;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AACA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,uDAAjB;AANY;AAQb;;;;kCAEWE,I,EAAK;AAEf,UAAIC,mBAAmB,GAAGD,IAAI,IAAI,KAAK,EAAT,CAA9B;AACA,UAAIE,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,mBAAmB,GAAG,EAAjC,CAAd;AACA,UAAII,mBAAmB,GAAGJ,mBAAmB,GAAG,EAAhD;AACA,UAAIN,OAAO,GAAGQ,IAAI,CAACG,IAAL,CAAUD,mBAAV,CAAd;AACA,UAAIE,GAAG,GAAG;AACV,aAAKL,OADK;AAEV,aAAKP;AAFK,OAAV;AAIA,aAAOY,GAAP;AACD;;;wCAEmB;AAClB,UAAIC,WAAW,GAAG,KAAKC,aAAL,CAAmB,KAAKhB,KAAL,CAAWE,OAA9B,CAAlB;AACA,WAAKe,QAAL,CAAc;AAAEhB,QAAAA,IAAI,EAAEc;AAAR,OAAd;AACD;;;iCAEY;AACX,UAAI,KAAKZ,KAAL,KAAe,CAAf,IAAoB,KAAKH,KAAL,CAAWE,OAAX,GAAqB,CAA7C,EAAgD;AAC9C,aAAKC,KAAL,GAAae,WAAW,CAAC,KAAKZ,SAAN,EAAiB,IAAjB,CAAxB;AACD;AACF;;;gCAGS;AAER,UAAIJ,OAAO,GAAG,KAAKF,KAAL,CAAWE,OAAX,GAAqB,CAAnC;AACA,WAAKe,QAAL,CAAc;AACZhB,QAAAA,IAAI,EAAE,KAAKe,aAAL,CAAmBd,OAAnB,CADM;AAEZA,QAAAA,OAAO,EAAEA;AAFG,OAAd;;AAKA,UAAIA,OAAO,KAAK,CAAhB,EAAmB;AACjBiB,QAAAA,aAAa,CAAC,KAAKhB,KAAN,CAAb;AACD;AACF,K,CAEH;;;;6BAEW;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE,KAAKC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EACkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADlD,OACwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADxD,EAEI,KAAKJ,KAAL,CAAWC,IAAX,CAAgBmB,CAFpB,cADF;AAMD;;;;EA1DiBtB,S;;AA6DnB,eAAeC,KAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Timer extends Component {\r\n  constructor() {\r\n    super()\r\n    \r\n    this.state = { time: {}, seconds: 30 };\r\n    this.timer = 0;\r\n    this.startTimer = this.startTimer.bind(this);\r\n    this.countDown = this.countDown.bind(this);\r\n\r\n  }\r\n\r\nsecondsToTime(secs){\r\n   \r\n    let divisor_for_minutes = secs % (60 * 60);\r\n    let minutes = Math.floor(divisor_for_minutes / 60);\r\n    let divisor_for_seconds = divisor_for_minutes % 60;\r\n    let seconds = Math.ceil(divisor_for_seconds);\r\n    let obj = {\r\n    \"m\": minutes,\r\n    \"s\": seconds\r\n    };\r\n    return obj;\r\n  }\r\n\r\n  componentDidMount() {\r\n    let timeLeftVar = this.secondsToTime(this.state.seconds);\r\n    this.setState({ time: timeLeftVar });\r\n  }\r\n\r\n  startTimer() {\r\n    if (this.timer === 0 && this.state.seconds > 0) {\r\n      this.timer = setInterval(this.countDown, 1000);\r\n    }\r\n  }\r\n\r\n\r\ncountDown() {\r\n    \r\n    let seconds = this.state.seconds - 1;\r\n    this.setState({\r\n      time: this.secondsToTime(seconds),\r\n      seconds: seconds,\r\n    });\r\n    \r\n    if (seconds === 0) { \r\n      clearInterval(this.timer);\r\n    }\r\n  }\r\n\r\n//m: {this.state.time.m} Put in render for minutes \r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <button onClick={this.startTimer}>Timer</button><br/> <br/>\r\n         {this.state.time.s}  seconds\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n export default Timer;"]},"metadata":{},"sourceType":"module"}