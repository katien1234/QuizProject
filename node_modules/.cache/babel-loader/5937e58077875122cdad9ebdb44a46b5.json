{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\05\\\\02\\\\2019\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\05\\\\02\\\\2019\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\05\\\\02\\\\2019\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\05\\\\02\\\\2019\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\05\\\\02\\\\2019\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\05\\\\02\\\\2019\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\05\\\\02\\\\2019\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\05\\\\02\\\\2019\\\\src\\\\Quiz.js\";\nimport React, { Component } from 'react';\nimport DisplayQuiz from './components/DisplayQuiz';\nimport './CreateQuiz.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nvar Quiz =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Quiz, _Component);\n\n  function Quiz() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Quiz);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Quiz)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      question: undefined,\n      answer: undefined,\n      quizList: [],\n      quizListCat: []\n    };\n\n    _this.getQuiz =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var api_call, response, tempQuizList, i, _i, tempQuiz;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return fetch('http://localhost:1337/localhost:8080/QuizAPI/api/quiz/getQuiz');\n\n              case 3:\n                api_call = _context.sent;\n                _context.next = 6;\n                return api_call.json();\n\n              case 6:\n                response = _context.sent;\n                tempQuizList = [];\n                i = 0;\n\n                for (_i = 0; _i < response.length; _i++) {\n                  tempQuiz = {\n                    id: _i,\n                    question: response[_i].question,\n                    answer: response[_i].answer\n                  };\n                  tempQuizList.push(tempQuiz);\n                }\n\n                console.log(response);\n\n                _this.setState({\n                  question: response[0].question,\n                  answer: response[0].answer,\n                  quizList: tempQuizList\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.getQuizByCat =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        var api_call, response, tempQuizListCat, i, _i2, tempQuizCat;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                e.preventDefault();\n                _context2.prev = 1;\n                _context2.next = 4;\n                return fetch('http://localhost:1337/localhost:8080/QuizAPI/api/quiz/getQuizByCat/' + e.target.elements.category.value);\n\n              case 4:\n                api_call = _context2.sent;\n                _context2.next = 7;\n                return api_call.json();\n\n              case 7:\n                response = _context2.sent;\n                tempQuizListCat = [];\n                i = 0;\n\n                for (_i2 = 0; _i2 < response.length; _i2++) {\n                  tempQuizCat = {\n                    id: _i2,\n                    question: response[_i2].question,\n                    answer: response[_i2].answer\n                  };\n                  tempQuizListCat.push(tempQuizCat);\n                }\n\n                console.log(response);\n\n                _this.setState({\n                  question: response[0].question,\n                  answer: response[0].answer,\n                  quizListCat: tempQuizListCat\n                });\n\n                _context2.next = 19;\n                break;\n\n              case 15:\n                _context2.prev = 15;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.log(\"Error please try again\" + _context2.t0);\n                toast(\"Please select a category\");\n\n              case 19:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 15]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(Quiz, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"CategoryQuestions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"getQuizByCat\",\n        onSubmit: this.getQuizByCat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Get questions by category or username\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        name: \"category\",\n        type: \"text\",\n        placeholder: \"Username or Category\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), this.state.quizListCat.map(function (item, key) {\n        return React.createElement(DisplayQuiz, {\n          item: item,\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        });\n      })), React.createElement(\"div\", {\n        className: \"Quiz\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.getQuiz,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Random Questions\"), this.state.quizList.map(function (item, key) {\n        return React.createElement(DisplayQuiz, {\n          item: item,\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        });\n      })), React.createElement(ToastContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Quiz;\n}(Component);\n\nexport default Quiz;","map":{"version":3,"sources":["C:\\Users\\Admin\\Desktop\\05\\02\\2019\\src\\Quiz.js"],"names":["React","Component","DisplayQuiz","ToastContainer","toast","Quiz","state","question","undefined","answer","quizList","quizListCat","getQuiz","e","preventDefault","fetch","api_call","json","response","tempQuizList","i","length","tempQuiz","id","push","console","log","setState","getQuizByCat","target","elements","category","value","tempQuizListCat","tempQuizCat","map","item","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport DisplayQuiz from './components/DisplayQuiz';\r\nimport './CreateQuiz.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\n\r\n\r\nclass Quiz extends Component {\r\n\r\n  state = {\r\n    question: undefined,\r\n    answer: undefined,\r\n    quizList: [],\r\n    quizListCat: [],\r\n  }\r\n\r\n\r\n  getQuiz = async (e) => {\r\n    e.preventDefault();\r\n    const api_call = await fetch('http://localhost:1337/localhost:8080/QuizAPI/api/quiz/getQuiz');\r\n    const response = await api_call.json();\r\n\r\n    const tempQuizList = []\r\n    var i = 0\r\n    for (let i = 0; i < response.length; i++) {\r\n      let tempQuiz = {\r\n        id: i,\r\n        question: response[i].question,\r\n        answer: response[i].answer\r\n      }\r\n      tempQuizList.push(tempQuiz);\r\n    }\r\n    console.log(response);\r\n\r\n    this.setState({\r\n      question: response[0].question,\r\n      answer: response[0].answer,\r\n      quizList: tempQuizList,\r\n    });\r\n\r\n  }\r\n\r\n  getQuizByCat = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const api_call = await fetch('http://localhost:1337/localhost:8080/QuizAPI/api/quiz/getQuizByCat/' + e.target.elements.category.value);\r\n      const response = await api_call.json();\r\n      const tempQuizListCat = []\r\n      var i = 0\r\n      for (let i = 0; i < response.length; i++) {\r\n        let tempQuizCat = {\r\n          id: i,\r\n          question: response[i].question,\r\n          answer: response[i].answer\r\n        }\r\n        tempQuizListCat.push(tempQuizCat);\r\n      }\r\n      console.log(response);\r\n\r\n      this.setState({\r\n        question: response[0].question,\r\n        answer: response[0].answer,\r\n        quizListCat: tempQuizListCat,\r\n      });\r\n    }\r\n    catch (error) {\r\n      console.log(\"Error please try again\" + error);\r\n      toast(\"Please select a category\");\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n         <div className=\"CategoryQuestions\">\r\n          <form className=\"getQuizByCat\" onSubmit={this.getQuizByCat}>\r\n            <button>Get questions by category or username</button><br/>\r\n            <input name=\"category\" type=\"text\" placeholder=\"Username or Category\" required />\r\n            {this.state.quizListCat.map((item, key) =>\r\n              <DisplayQuiz item={item} key={item.id} />)}  \r\n          </form>\r\n        <div className=\"Quiz\">\r\n          <button onClick={this.getQuiz}>Random Questions</button>\r\n          {this.state.quizList.map((item, key) =>\r\n            <DisplayQuiz item={item} key={item.id} />)}\r\n        </div>\r\n        <ToastContainer />\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Quiz;\r\n"]},"metadata":{},"sourceType":"module"}